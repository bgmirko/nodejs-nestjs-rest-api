name: Deploy Project
on: [push, workflow_dispatch]
jobs:
  lint-check:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install
      - name: Run Lint check
        run: npm run lint
  jest-test:
    needs: lint-check
    runs-on: ubuntu-latest
    container:
      image: node:18
    env:
      DB_HOST: postgres-host
      POSTGRES_PASSWORD: password
      DB_NAME: postgres
      PORT: 5432
    services:
      postgres-host: 
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT #requires database
      - name: Run tests
        run: npm run test:github-exclude
  build:
    needs: jest-test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install
      - name: Build code
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: |
            dist/main.js
            dist/utils/*.js
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml
    with: 
      artifact-name: build-files
    # secrets:
      # some-secret: ${{ secrets.some-secret }}
  print-deploy-result:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Print deploy output
        run: echo "${{ needs.deploy.outputs.result }}"
